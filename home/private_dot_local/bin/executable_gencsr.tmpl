{{- if .work -}}
#!/usr/bin/env bash

# defaults =====================================================================
O="Sectigo Limited"
ST=Manchester
C=GB

# basic checks and strings =====================================================
SCRIPT_NAME=$(basename $0)

if [[ -z "$1" ]]; then
    echo "usage: ${SCRIPT_NAME} CN [SAN1 SAN2 ...]"
    echo "example: ${SCRIPT_NAME} www.mydomain.com web w3 exch mail"
    exit 1
else
    CN=$1
    SUBJ="/C=${C}/ST=${ST}/O=${O}/CN=${CN}"
fi

FILENAME=${1//./_}
FILENAME=${FILENAME//\*/_}

# clearing old files
rm -f "${FILENAME}.ssl_csr" "${FILENAME}.ssl_key"

# create private key ===========================================================
openssl genrsa -out "${FILENAME}.ssl_key" 2048

if [[ $# -gt 1 ]]; then #test for arg count
    #build SAN string ==================
    A=($@)
    I=1
    while [[ ${I} -lt ${#A[@]} ]]
    do
        SAN="DNS:${A[I]}${CMA}${SAN}"
        CMA=","
        I=${I}+1
    done
    SAN="\n[SAN]\nsubjectAltName=${SAN}"
    #===================================

    # create SAN certificate signing request ===================================
    openssl req -new -sha256 \
    -subj "${SUBJ}" \
    -key   "${FILENAME}.ssl_key" \
    -out   "${FILENAME}.ssl_csr" \
    -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf "${SAN}"))
else
    # create Single certificate signing request ================================
    openssl req -new -sha256 \
    -subj "${SUBJ}" \
    -key   "${FILENAME}.ssl_key" \
    -out   "${FILENAME}.ssl_csr"
fi

# verification =================================================================
openssl req -text -noout -verify -in "${FILENAME}.ssl_csr"
{{- end }}
